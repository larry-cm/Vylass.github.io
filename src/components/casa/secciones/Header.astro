---
import MenuBurger from "@components/casa/MenuBurger.astro";
import NavItems from "@components/casa/Btns/NavItems.astro";

import { queryDeepSeekAPI } from "@bd/Deepseek";
export const prerender = false;
const userSession = Astro.cookies?.get("sessionIniciada")?.value;
const userImg = Astro.cookies?.get("imagenUsuario")?.value;
const userName = Astro.cookies?.get("usuario")?.value;
const urlHome = Astro.url?.pathname === "/" ? "#home" : Astro.url?.pathname;

function addItems(l: string[], l2: string[]) {
    return l.map((_, i, m) => ({ text: m[i], url: l2[i] }));
}

const entrada = addItems(
    ["Plataforma", "Registro de usuarios"],
    ["/", "/registro"],
);
// queryDeepSeekAPI("créame una pagina de astro hecha solo con md").then(
//     (res) => console.log(res),
//     (res) => console.error(res),
// );
---

<script>
    function setupGlobalEvents() {
        // Obtiene el elemento html
        const html = document.documentElement;

        // Obtiene el elemento select del tema.
        const select = document.querySelector(
            "#tema-sistema",
        ) as HTMLSelectElement | null;

        // Función para obtener todos los botones de tema.
        const btnThemes = (classId?: string) =>
            Array.from(document.querySelectorAll(classId || ".btn-theme"));
        /*
         El tema a aplicar ('dark' o 'light').
         */
        interface Theme {
            theme: string;
        }
        async function applyTheme({ theme }: Theme) {
            const html = document.documentElement;
            return theme === "dark"
                ? html.classList.add("dark")
                : html.classList.remove("dark");
        }

        /*
         El elemento al que se le aplicará el icono.
         */
        interface ElementTheme extends Theme {
            e: Element;
        }
        function applyIconTheme({ e, theme }: ElementTheme) {
            e.innerHTML =
                theme === "dark"
                    ? `<svg width="20px" height="20px" stroke-width="1.5" viewBox="0 0 24 24" fill="none"  color="currentColor"><path d="M3 15C5.48276 15 7.34483 12 7.34483 12C7.34483 12 9.2069 15 11.6897 15C14.1724 15 16.6552 12 16.6552 12C16.6552 12 19.1379 15 21 15" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M3 20C5.48276 20 7.34483 17 7.34483 17C7.34483 17 9.2069 20 11.6897 20C14.1724 20 16.6552 17 16.6552 17C16.6552 17 19.1379 20 21 20" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M19 10C19 6.13401 15.866 3 12 3C8.13401 3 5 6.13401 5 10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg>`
                    : `<svg width="20px" height="20px" stroke-width="1.5" viewBox="0 0 24 24" fill="none"  color="currentColor"><circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="1.5" stroke-width="1.5"></circle><path d="M7.63262 3.06689C8.98567 3.35733 9.99999 4.56025 9.99999 6.00007C9.99999 7.65693 8.65685 9.00007 6.99999 9.00007C5.4512 9.00007 4.17653 7.82641 4.01685 6.31997" stroke="currentColor" stroke-width="1.5"></path><path d="M22 13.0505C21.3647 12.4022 20.4793 12 19.5 12C17.567 12 16 13.567 16 15.5C16 17.2632 17.3039 18.7219 19 18.9646" stroke="currentColor" stroke-width="1.5"></path><path d="M14.5 8.51L14.51 8.49889" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path><path d="M10 17C11.1046 17 12 16.1046 12 15C12 13.8954 11.1046 13 10 13C8.89543 13 8 13.8954 8 15C8 16.1046 8.89543 17 10 17Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path></svg>`;
        }

        /*
          Carga el tema desde el almacenamiento local o detecta la preferencia del sistema.
         */
        async function loadTheme() {
            const saved = localStorage.getItem("theme");
            const prefersDark = window.matchMedia(
                "(prefers-color-scheme: dark)",
            ).matches;
            const newTheme = saved || (prefersDark ? "dark" : "light");
            const buttonsThemes = btnThemes(".btn-theme");

            if (select) select.value = newTheme;
            await applyTheme({ theme: newTheme });
            buttonsThemes.forEach((e) =>
                applyIconTheme({ e: e, theme: newTheme }),
            );
        }

        /*
         Cambia el tema actual y guarda la preferencia en el almacenamiento local.
         */
        function changeTheme() {
            if (!select) return;
            const value = select.value;
            const buttonsThemes = btnThemes(".btn-theme");

            localStorage.setItem("theme", value);
            applyTheme({ theme: value });
            buttonsThemes.forEach((e) =>
                applyIconTheme({ e: e, theme: value }),
            );
        }

        /*
          Alterna entre los temas claro y oscuro.
         */
        function toggleTheme({ e }: { e: Event }) {
            const btnTheme = e.currentTarget as HTMLElement;
            const isDark = html.classList.contains("dark");
            const newTheme = isDark ? "light" : "dark";

            localStorage.setItem("theme", newTheme);
            applyIconTheme({ e: btnTheme, theme: newTheme });
            applyTheme({ theme: newTheme });
            if (select) select.value = newTheme;
        }

        /*
          Reasigna los eventos a los botones de tema.
         */
        async function addEvents() {
            const buttonsThemes = btnThemes(".btn-theme");

            await loadTheme();
            buttonsThemes.forEach((e) => {
                e.removeEventListener("click", (e) => toggleTheme({ e }));
                e.addEventListener("click", (e) => toggleTheme({ e }));
            });
        }

        // Agrega los event listeners
        if (select) select.addEventListener("change", changeTheme);
        document.addEventListener("load", addEvents, {
            once: true,
        });
        document.addEventListener("astro:page-load", addEvents);
    }
    setupGlobalEvents();
</script>

<header
    class="min-h-[10vh] flex justify-between items-center bg-gradient-to-bl from-orange-400 via-orange-400 to-orange-400 relative z-40"
>
    <nav
        transition:name={`nav-base`}
        class="flex items-center justify-between w-full h-full gap-2 px-4 transition-all sm:px-8"
    >
        <a
            href={urlHome}
            class="min-w-[28%] flex items-center text-[#1a1a1a] dark:text-white gap-2"
        >
            <svg
                class="transition-all size-9 sm:size-12"
                viewBox="0 0 100.642 100.642"
                xml:space="preserve"
                aria-labelledby="icono principal de mi pagina web en donde estoy haciendo peticiones sql"
            >
                <title>
                    icono principal de mi pagina web en donde estoy haciendo
                    peticiones sql
                </title>
                <path
                    class="fill-[#1a1a1a] dark:fill-white"
                    d="M25.95 41.827 9.606 30.902a.664.664 0 0 0-1.03.551v19.859c0 .221.11.428.294.55l16.345 10.926a.67.67 0 0 0 .68.033.662.662 0 0 0 .35-.583v-19.86a.665.665 0 0 0-.295-.551zM25.95 66.989 9.606 56.064a.66.66 0 0 0-1.03.55v19.858c0 .222.11.429.294.552L25.215 87.95a.662.662 0 0 0 1.03-.55V67.54a.666.666 0 0 0-.295-.551zM45.571 53.4l-16.344-9.932a.662.662 0 0 0-1.006.566v19.859c0 .221.11.427.294.551l16.344 10.925a.662.662 0 0 0 1.03-.551V53.966a.666.666 0 0 0-.318-.566zM45.594 79.57 29.25 68.646a.66.66 0 0 0-1.03.55v19.859c0 .222.11.428.294.551l16.344 10.926a.664.664 0 0 0 .68.033.663.663 0 0 0 .35-.584V80.12c0-.22-.11-.427-.294-.55zM84.82 30.872a.66.66 0 0 0-.673.021L67.405 41.487a.66.66 0 0 0-.308.572l.396 20.19a.662.662 0 0 0 1.03.538l16.345-10.926a.659.659 0 0 0 .294-.55V31.452a.662.662 0 0 0-.342-.58zM84.812 56.03a.66.66 0 0 0-.68.034L67.788 66.989a.66.66 0 0 0-.295.55v19.86a.663.663 0 0 0 1.031.55l16.345-10.926a.663.663 0 0 0 .294-.552V56.614a.665.665 0 0 0-.351-.584zM65.181 43.456a.666.666 0 0 0-.67.011l-16.343 9.932a.66.66 0 0 0-.319.565v20.854a.661.661 0 0 0 1.031.551l16.344-10.925a.663.663 0 0 0 .295-.551v-19.86a.661.661 0 0 0-.338-.577zM44.429 29.796a.663.663 0 0 0-.324-.585l-15.337-9.11a.662.662 0 0 0-.633-.023l-17.108 8.498a.661.661 0 0 0-.061 1.151l15.285 9.724a.668.668 0 0 0 .666.026l17.161-9.111a.663.663 0 0 0 .351-.57zM31.051 19.967l14.987 8.73a.668.668 0 0 0 .649.01l16.167-8.779a.662.662 0 0 0-.02-1.175l-15.007-7.455a.662.662 0 0 0-.573-.008l-16.148 7.504a.66.66 0 0 0-.055 1.173zM63.2 41.065a.662.662 0 0 0-.351-.574l-16.152-8.614a.661.661 0 0 0-.626.002l-15.995 8.664a.66.66 0 0 0-.347.578.667.667 0 0 0 .339.583l16.244 9.061a.653.653 0 0 0 .653-.004l15.903-9.11a.664.664 0 0 0 .332-.586zM91.945.28a.661.661 0 0 0-.611-.277L73.132 1.971a.661.661 0 0 0-.517.354l-8.349 16.162a.661.661 0 0 0 .649.963l18.526-1.649a.664.664 0 0 0 .537-.37L92 .95a.664.664 0 0 0-.055-.67zM65.169 68.611a.661.661 0 0 0-.681.034L48.144 79.57a.66.66 0 0 0-.295.55v19.86a.662.662 0 0 0 1.031.551l16.344-10.926a.661.661 0 0 0 .295-.551V69.195a.664.664 0 0 0-.35-.584z"
                ></path>
            </svg>
            <h1
                class="flex items-center text-2xl font-semibold capitalize transition-all sm:text-3xl first-letter:text-3xl sm:first-letter:text-4xl text-nowrap"
            >
                fetchToMySQL
            </h1>
        </a>

        <!-- menu de aburguesa -->
        <MenuBurger
            userSession={userSession ?? ""}
            userName={userName ?? ""}
            userImg={userImg ?? ""}
            entrada={entrada}
        />
        <!-- menu principal -->
        <ul
            class="md:flex max-h-[60px] text-white font-medium justify-end flex-col gap-2 sm:flex-row items-center transition text-center hidden *:md:text-base *:text-nowrap *:font-normal *:lg:text-lg"
        >
            <NavItems
                userSession={userSession ?? ""}
                userName={userName ?? ""}
                userImg={userImg ?? ""}
                entrada={entrada}
            />
        </ul>
    </nav>
</header>

<style>
    .header nav {
        span svg {
            transform: rotate(-90deg);
            transition: 0.2s ease;
        }
        #btn-burger:checked + label span svg {
            transform: rotate(0deg);
        }
        ul li {
            transition: 0.3s ease;
        }
    }
</style>
