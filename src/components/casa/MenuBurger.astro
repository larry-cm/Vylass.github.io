---
import NavItems from "@components/casa/Btns/NavItems.astro";
interface Props {
    userSession: string;
    userName: string;
    userImg: string;
    entrada: {
        text: string;
        url: string;
    }[];
}

const { userSession, userName, userImg, entrada } = Astro.props;
---

<script>
    function setupCloseBurger() {
        function getElements() {
            return {
                burger: document.querySelector(
                    "#btn-burger",
                ) as HTMLInputElement,
                menu: document.querySelector(
                    "menu[data-menu]",
                ) as HTMLUListElement,
                label: document.querySelector(
                    'label[for="btn-burger"]',
                ) as HTMLLabelElement,
            };
        }

        function closeBurger(event: Event) {
            const { burger, menu, label } = getElements();

            if (
                burger &&
                burger.checked &&
                event.target !== burger &&
                menu &&
                !menu.contains(event.target as Node) &&
                !(label && label.contains(event.target as Node)) &&
                !(
                    (event.target as Node) instanceof SVGSVGElement ||
                    (event.target as Node) instanceof SVGPathElement
                )
            )
                burger.checked = false;
        }

        document.body?.addEventListener("click", closeBurger);
    }
    setupCloseBurger();
</script>

<input type="checkbox" id="btn-burger" class="hidden peer" />
<label class="cursor-pointer peer-checked:*:*:-rotate-180" for="btn-burger">
    <span class="sr-only">Menu de hamburguesa para los celulares</span>
    <span class="md:hidden">
        <svg
            stroke-width="1.5"
            class="transition-transform duration-300 size-8"
            width="30"
            height="30"
            viewBox="0 0 24 24"
            fill="currentColor"
        >
            <title>Menu de hamburguesa para los celulares</title>
            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
            <path
                d="M18 3a3 3 0 0 1 2.995 2.824l.005 .176v12a3 3 0 0 1 -2.824 2.995l-.176 .005h-12a3 3 0 0 1 -2.995 -2.824l-.005 -.176v-12a3 3 0 0 1 2.824 -2.995l.176 -.005h12zm0 2h-12a1 1 0 0 0 -.993 .883l-.007 .117v9h14v-9a1 1 0 0 0 -.883 -.993l-.117 -.007zm-7.387 3.21l.094 .083l1.293 1.292l1.293 -1.292a1 1 0 0 1 1.32 -.083l.094 .083a1 1 0 0 1 .083 1.32l-.083 .094l-2 2a1 1 0 0 1 -1.32 .083l-.094 -.083l-2 -2a1 1 0 0 1 1.32 -1.497z"
            ></path>
        </svg>
    </span>
</label>

<menu
    data-menu
    class={`fixed z-40 top-[10vh] left-0 right-0 w-full mx-auto max-w-full transition-all duration-200 ease-in-out
        bg-gradient-to-b backdrop-blur-md from-orange-400 via-orange-400 to-orange-500 shadow-md rounded-b opacity-0 -translate-y-[10vh] scale-y-95 pointer-events-none peer-checked:opacity-100 peer-checked:scale-y-100 peer-checked:pointer-events-auto peer-checked:translate-y-0 flex flex-wrap items-center gap-4 py-4 p-2 sm:p-8 justify-end md:hidden
    `}
>
    <NavItems
        userImg={userImg}
        userName={userName}
        userSession={userSession}
        entrada={entrada}
    />
</menu>
